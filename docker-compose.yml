version: '3'

services:
  minio:
    image: minio/minio:RELEASE.2020-01-03T19-12-21Z
    hostname: minio
    volumes:
      - minio:/export
    ports:
      - "9000:9000"
    networks:
      - thanos
    environment:
      MINIO_ACCESS_KEY: EXAMPLEKEY
      MINIO_SECRET_KEY: EXAMPLESECRET
    command: server /export
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mc:
    image: minio/mc
    entrypoint: |
      sh -c 'sh -s << EOF
      mc config host add tmp http://minio:9000 EXAMPLEKEY EXAMPLESECRET
      mc mb tmp/thanos
      mc config host rm tmp
      sleep 10000000
      EOF'
    networks:
      - thanos
    depends_on:
      - minio

  prometheus0:
    image: prom/prometheus:v2.9.2
    user: root
    volumes:
      - thanos0:/data
      - ./data/prom0/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/data/prom0"
      - "--log.level=warn"
      - "--web.enable-lifecycle"
      - "--storage.tsdb.min-block-duration=2h"
      - "--storage.tsdb.max-block-duration=2h"
      - "--web.listen-address=0.0.0.0:9090"
    depends_on:
      - minio
    networks:
      - thanos

  prometheus1:
    image: prom/prometheus:v2.9.2
    user: root
    volumes:
      - thanos1:/data
      - ./data/prom1/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/data/prom1"
      - "--log.level=warn"
      - "--web.enable-lifecycle"
      - "--storage.tsdb.min-block-duration=2h"
      - "--storage.tsdb.max-block-duration=2h"
      - "--web.listen-address=0.0.0.0:9091"
    depends_on:
      - minio
    networks:
      - thanos

  prometheus2:
    image: prom/prometheus:v2.9.2
    user: root
    volumes:
      - thanos2:/data
      - ./data/prom2/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/data/prom2"
      - "--log.level=warn"
      - "--web.enable-lifecycle"
      - "--storage.tsdb.min-block-duration=2h"
      - "--storage.tsdb.max-block-duration=2h"
      - "--web.listen-address=0.0.0.0:9092"
    depends_on:
      - minio
    networks:
      - thanos

  sidecar0:
    image: thanosio/thanos:v0.10.0
    command:
      - "sidecar"
      - "--debug.name=sidecar-0"
      - "--log.level=debug"
      - "--grpc-address=0.0.0.0:10901"
      - "--grpc-grace-period=1s"
      - "--http-address=0.0.0.0:10902"
      - "--http-grace-period=1s"
      - "--prometheus.url=http://prometheus0:9090"
      - "--tsdb.path=/data/prom0"
      - "--objstore.config-file=/bucket.yml"
    volumes:
      - thanos0:/data
      - ./data/bucket.yml:/bucket.yml
    depends_on:
      - minio
      - prometheus0
    networks:
      - thanos

  sidecar1:
    image: thanosio/thanos:v0.10.0
    command:
      - "sidecar"
      - "--debug.name=sidecar-1"
      - "--log.level=debug"
      - "--grpc-address=0.0.0.0:10911"
      - "--grpc-grace-period=1s"
      - "--http-address=0.0.0.0:10912"
      - "--http-grace-period=1s"
      - "--prometheus.url=http://prometheus1:9091"
      - "--tsdb.path=/data/prom1"
      - "--objstore.config-file=/bucket.yml"
    volumes:
      - thanos1:/data
      - ./data/bucket.yml:/bucket.yml
    depends_on:
      - minio
      - prometheus1
    networks:
      - thanos

  sidecar2:
    image: thanosio/thanos:v0.10.0
    command:
      - "sidecar"
      - "--debug.name=sidecar-2"
      - "--log.level=debug"
      - "--grpc-address=0.0.0.0:10921"
      - "--grpc-grace-period=1s"
      - "--http-address=0.0.0.0:10922"
      - "--http-grace-period=1s"
      - "--prometheus.url=http://prometheus2:9092"
      - "--tsdb.path=/data/prom2"
      - "--objstore.config-file=/bucket.yml"
    volumes:
      - thanos2:/data
      - ./data/bucket.yml:/bucket.yml
    depends_on:
      - minio
      - prometheus2
    networks:
      - thanos

  store:
    image: thanosio/thanos:v0.10.0
    command:
      - "store"
      - "--debug.name=store"
      - "--log.level=debug"
      - "--grpc-address=0.0.0.0:10905"
      - "--grpc-grace-period=1s"
      - "--http-address=0.0.0.0:10906"
      - "--http-grace-period=1s"
      - "--data-dir=/data/store"
      - "--objstore.config-file=/bucket.yml"
    volumes:
      - store:/data
      - ./data/bucket.yml:/bucket.yml
    depends_on:
      - minio
    networks:
      - thanos

  receive:
    image: thanosio/thanos:v0.10.0
    command:
      - "receive"
      - "--debug.name=receive"
      - "--log.level=debug"
      - "--tsdb.path=/data/remote-write-receive-data"
      - "--grpc-address=0.0.0.0:10907"
      - "--grpc-grace-period=1s"
      - "--http-address=0.0.0.0:10909"
      - "--http-grace-period=1s"
      - "--label=receive=\"true\""
      - "--objstore.config-file=/bucket.yml"
      - "--remote-write.address=0.0.0.0:10908"
    volumes:
      - receive:/data
      - ./data/bucket.yml:/bucket.yml
    depends_on:
      - minio
    networks:
      - thanos

  remotewrite:
    image: prom/prometheus:v2.9.2
    user: root
    volumes:
      - ./data/local-prometheus-data/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    depends_on:
      - minio
      - prometheus0
      - sidecar0
    networks:
      - thanos

  node-exporter:
    image: ruanbekker/node-exporter:v0.18.0
    volumes:
      - /tmp/hostname:/etc/nodename
    environment:
      - HOST_HOSTNAME=/etc/host_hostname
      - NODE_ID={{.Node.ID}}
    command:
      #- '--path.procfs=/host/proc'
      #- '--path.sysfs=/host/sys'
      #- '--collector.filesystem.ignored-mount-points'
      #- "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
      #- '--collector.textfile.directory=/etc/node-exporter/'
      - '--no-collector.ipvs'
    networks:
      - thanos

  query0:
    image: thanosio/thanos:v0.10.0
    command:
      - "query"
      - "--debug.name=query-0"
      - "--log.level=debug"
      - "--grpc-address=0.0.0.0:10903"
      - "--grpc-grace-period=1s"
      - "--http-address=0.0.0.0:10904"
      - "--http-grace-period=1s"
      - "--query.replica-label=prometheus"
      - "--store=sidecar0:10901"
      - "--store=sidecar1:10911"
      - "--store=sidecar2:10921"
      - "--store=store:10905"
      - "--store=receive:10907"
    ports:
      - 10904:10904
    depends_on:
      - minio
      - sidecar0
      - sidecar1
      - sidecar2
      - store
      - receive
    networks:
      - thanos

  query1:
    image: thanosio/thanos:v0.10.0
    command:
      - "query"
      - "--debug.name=query-1"
      - "--log.level=debug"
      - "--grpc-address=0.0.0.0:10913"
      - "--grpc-grace-period=1s"
      - "--http-address=0.0.0.0:10914"
      - "--http-grace-period=1s"
      - "--query.replica-label=prometheus"
      - "--store=sidecar0:10901"
      - "--store=sidecar1:10911"
      - "--store=sidecar2:10921"
      - "--store=store:10905"
      - "--store=receive:10907"
    depends_on:
      - minio
      - sidecar0
      - sidecar1
      - sidecar2
      - store
      - receive
    networks:
      - thanos

networks:
  thanos: {}

volumes:
  minio: {}
  thanos0: {}
  thanos1: {}
  thanos2: {}
  store: {}
  receive: {}
